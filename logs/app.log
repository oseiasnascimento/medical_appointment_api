{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:07:47"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:07:47"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:09:11"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:09:11"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:22:51"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:22:51"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:28:47"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:28:47"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:29:52"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:29:52"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:32:12"}
{"level":"error","message":"Error: \nInvalid `prismaClient.user.findUnique()` invocation in\nc:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:42\n\n  4 \n  5 export class UserPrismaRepository implements IUserRepository {\n  6   async findByUsername(username: string): Promise<User | undefined> {\n→ 7     const user = await prismaClient.user.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\r\n 7 |   url      = env(\"DATABASE_URL\")\r\n   | \n\nValidation Error Count: 1\n    at Object.handleRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:6750)\n    at Object.handleAndLogRequestError (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:176:5907)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3087)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:3294)\n    at t._executeRequest (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10755)\n    at t._request (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\node_modules\\@prisma\\client\\runtime\\library.js:179:10484)\n    at UserPrismaRepository.findByUsername (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\repositories\\implementations\\user.prisma.repository.ts:7:18)\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:26:23)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:32:12"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 10:34:53"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:29:13)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 10:34:53"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 11:24:45"}
{"level":"error","message":"USER_EXISTS_ERROR: Username already exists\n    at CreateUserUseCase.execute (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.usecase.ts:29:13)\n    at CreateUserController.handle (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\modules\\users\\useCases\\create-user\\create-user.controller.ts:22:22)\n    at <anonymous> (c:\\Users\\Oseias Saboia\\Documents\\GitHub\\medical_appointment_api\\src\\routes\\user.routes.ts:7:3)","timestamp":"04/08/2023 11:24:45"}
{"level":"info","message":"User begin created","timestamp":"04/08/2023 11:26:14"}
